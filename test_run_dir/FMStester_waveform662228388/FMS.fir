;buildInfoPackage: chisel3, version: 3.2.2, scalaVersion: 2.11.12, sbtVersion: 1.3.2
circuit FMS : 
  module FMS : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip iterate : UInt<1>, flip done_learning : UInt<1>, flip move_to_checking_reward : UInt<1>, wrEna : UInt<1>, cal : UInt<1>}
    
    reg state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[FMS.scala 13:20]
    reg wrEna : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMS.scala 14:20]
    reg cal : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FMS.scala 15:18]
    node _T = eq(UInt<3>("h00"), state) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      when io.iterate : @[FMS.scala 18:24]
        state <= UInt<3>("h00") @[FMS.scala 19:15]
        skip @[FMS.scala 18:24]
      else : @[FMS.scala 20:36]
        when io.done_learning : @[FMS.scala 20:36]
          state <= UInt<3>("h04") @[FMS.scala 21:15]
          skip @[FMS.scala 20:36]
        else : @[FMS.scala 22:9]
          state <= UInt<3>("h01") @[FMS.scala 23:15]
          skip @[FMS.scala 22:9]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<3>("h01"), state) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        when io.move_to_checking_reward : @[FMS.scala 27:40]
          state <= UInt<3>("h02") @[FMS.scala 28:15]
          cal <= UInt<1>("h01") @[FMS.scala 29:13]
          skip @[FMS.scala 27:40]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<3>("h02"), state) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          state <= UInt<3>("h03") @[FMS.scala 33:13]
          node _T_3 = eq(cal, UInt<1>("h01")) @[FMS.scala 34:16]
          when _T_3 : @[FMS.scala 34:28]
            cal <= UInt<1>("h00") @[FMS.scala 35:13]
            skip @[FMS.scala 34:28]
          wrEna <= UInt<1>("h01") @[FMS.scala 37:12]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_4 = eq(UInt<3>("h03"), state) @[Conditional.scala 37:30]
          when _T_4 : @[Conditional.scala 39:67]
            node _T_5 = eq(wrEna, UInt<1>("h01")) @[FMS.scala 40:20]
            when _T_5 : @[FMS.scala 40:32]
              wrEna <= UInt<1>("h00") @[FMS.scala 41:17]
              skip @[FMS.scala 40:32]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_6 = eq(UInt<3>("h04"), state) @[Conditional.scala 37:30]
            when _T_6 : @[Conditional.scala 39:67]
              io.cal <= UInt<1>("h00") @[FMS.scala 45:14]
              skip @[Conditional.scala 39:67]
    io.cal <= cal @[FMS.scala 48:10]
    io.wrEna <= wrEna @[FMS.scala 49:11]
    
